apiVersion: v1
kind: Template
metadata:
  name: container-first-service-with-sleuth-template
  labels:
    name: first-service-with-sleuth
  annotations:
    description: Template for the Container first-service-with-sleuth
objects:
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        name: first-service-with-sleuth
        service: ${SERVICE_NAME}
      name: ${SERVICE_NAME}
      annotations:
        description: "The Container first-service-with-sleuth service"
    spec:
      ports:
        - name: 8082-tcp
          port: 8082
          targetPort: 8082
          protocol: TCP  
      selector:
        name: ${SERVICE_NAME}
      type: ClusterIP
  - apiVersion: v1
    kind: Route
    metadata:
      labels:
        name: first-service-with-sleuth
      name: ${SERVICE_NAME}
      annotations:
        description: "The route to expose the Container first-service-with-sleuth's 8082 port"
    spec:
      host: ${SERVICE_NAME}-${NAMESPACE}.${CLUSTER_URL}
      to:
        kind: Service
        name: ${SERVICE_NAME}
      port:
        targetPort: 8082-tcp
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: ${SERVICE_NAME}
      labels:
        name: first-service-with-sleuth
      annotations:
        description: "The Container first-service-with-sleuth deployment configuration"
    spec:
      strategy:
        type: Rolling
        rollingParams:
          timeoutSeconds: 18000
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - ${SERVICE_NAME}
            from:
              kind: ImageStreamTag
              name: "${SERVICE_NAME}:${VERSION}"
      replicas: 1
      selector:
        name: ${SERVICE_NAME}
        deploymentconfig: ${SERVICE_NAME}
      template:
        metadata:
          labels:
            name: first-service-with-sleuth
            deploymentconfig: ${SERVICE_NAME}
        spec:
          containers:
            - name: ${SERVICE_NAME}
              image: "${NAMESPACE}/${SERVICE_NAME}:${VERSION}"
              imagePullPolicy: Always
          ports:
            - containerPort: 8082
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          securityContext: {}
          terminationGracePeriodSeconds: 60
        test: false
      status: {}
parameters:
  - name: CLUSTER_URL
    description: "Cluster url"
    value: apps-crc.testing
  - name: NAMESPACE
    description: "Name space"
    value: distributed-systems
  - name: SERVICE_NAME
    description: "Service name"
    value: first-service-with-sleuth
  - name: VERSION
    description: "Version of Jaeger"
    required: true