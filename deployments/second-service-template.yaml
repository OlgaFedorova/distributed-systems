apiVersion: v1
kind: Template
metadata:
  name: container-second-service-template
  labels:
    name: second-service
  annotations:
    description: Template for the Container second-service
objects:
  - apiVersion: v1
    kind: ImageStream
    metadata:
      annotations:
        description: Container second-service image stream
      labels:
        name: second-service
      name: second-service
    spec:
      tags:
      - annotations:
        from:
          kind: DockerImage
          name: olgafedorova/second-service:latest
        name: latest
        importPolicy: {}
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        name: second-service
        service: second-service
      name: second-service
      annotations:
        description: "The Container second-service service"
    spec:
      ports:
        - name: 8081-tcp
          port: 8081
          targetPort: 8081
          protocol: TCP  
      selector:
        name: second-service
      type: ClusterIP
  - apiVersion: v1
    kind: Route
    metadata:
      labels:
        name: second-service
      name: second-service
      annotations:
        description: "The route to expose the Container second-service's 8081 port"
    spec:
      host: second-service-distributed-systems.192.168.64.2.nip.io
      to:
        kind: Service
        name: second-service
      port:
        targetPort: 8081-tcp
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: second-service
      labels:
        name: second-service
      annotations:
        description: "The Container second-service deployment configuration"
    spec:
      strategy:
        type: Rolling
        rollingParams:
          timeoutSeconds: 18000
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - second-service
            from:
              kind: ImageStreamTag
              name: "second-service:latest"
      replicas: 1
      selector:
        name: second-service
        deploymentconfig: second-service
      template:
        metadata:
          labels:
            name: second-service
            deploymentconfig: second-service
        spec:
          containers:
            - name: second-service
              image: "olgafedorova/second-service:latest"
              imagePullPolicy: Always
          ports:
            - containerPort: 8081
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          securityContext: {}
          terminationGracePeriodSeconds: 60
        test: false
      status: {}